{"allSourcePaths": {"4": "contracts/test/VRFCoordinatorMock.sol", "2": "C:/Users/Simet/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/LinkTokenInterface.sol", "3": "C:/Users/Simet/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/SafeMathChainlink.sol", "0": "C:/Users/Simet/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFConsumerBase.sol", "1": "C:/Users/Simet/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFRequestIDBase.sol"}, "bytecode": "608060405234801561001057600080fd5b506040516104073803806104078339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556103a2806100656000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b6b6d2314610046578063a4c0ed361461006a578063cf55fe9714610127575b600080fd5b61004e610159565b604080516001600160a01b039092168252519081900360200190f35b6101256004803603606081101561008057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156100b057600080fd5b8201836020820111156100c257600080fd5b803590602001918460018302840111640100000000831117156100e457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610168945050505050565b005b6101256004803603606081101561013d57600080fd5b50803590602081013590604001356001600160a01b0316610222565b6000546001600160a01b031681565b6000546001600160a01b031633146101bd576040805162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015290519081900360640190fd5b6000808280602001905160408110156101d557600080fd5b5080516020909101516040519193509150819083906001600160a01b038816907f7a9a0a6960d95b32cded93c30e63e7c2eb9e877230813c172110ea54dc1c915c90600090a45050505050565b604080516024810185905260448082018590528251808303909101815260649091019091526020810180516001600160e01b03166394985ddd60e01b179052600090620324b0805a10156102bd576040805162461bcd60e51b815260206004820152601b60248201527f6e6f7420656e6f7567682067617320666f7220636f6e73756d65720000000000604482015290519081900360640190fd5b6000846001600160a01b0316836040518082805190602001908083835b602083106102f95780518252601f1990920191602091820191016102da565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461035b576040519150601f19603f3d011682016040523d82523d6000602084013e610360565b606091505b5050505050505050505056fea2646970667358221220de2e42ae1d74f54fe33751953b899c6c931ab279ffa3206e27e4f9cfa83a866b64736f6c63430006060033", "bytecodeSha1": "a234e721cab3c47e532d8404949512e63f344855", "coverageMap": {"statements": {"4": {"VRFCoordinatorMock.onTokenTransfer": {"0": [666, 711]}, "VRFCoordinatorMock.callBackWithRandomness": {"1": [1031, 1085]}}, "2": {}, "3": {}, "0": {}, "1": {}}, "branches": {"4": {"VRFCoordinatorMock.callBackWithRandomness": {"2": [1039, 1053, true]}}, "2": {}, "3": {}, "0": {}, "1": {}}}, "dependencies": ["smartcontractkit/chainlink-brownie-contracts@1.1.1/LinkTokenInterface", "smartcontractkit/chainlink-brownie-contracts@1.1.1/SafeMathChainlink", "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFConsumerBase", "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFRequestIDBase"], "offset": [191, 1262], "pcMap": {"0": {"op": "PUSH1", "value": "0x80", "path": "4", "offset": [191, 1262]}, "2": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [191, 1262], "fn": null}, "4": {"op": "MSTORE", "path": "4", "offset": [191, 1262], "fn": null}, "5": {"op": "CALLVALUE", "path": "4", "offset": [191, 1262], "fn": null}, "6": {"op": "DUP1"}, "7": {"op": "ISZERO"}, "8": {"op": "PUSH2", "value": "0x10"}, "11": {"op": "JUMPI"}, "12": {"op": "PUSH1", "value": "0x0"}, "14": {"op": "DUP1"}, "15": {"op": "REVERT", "dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [191, 1262], "path": "4"}, "16": {"op": "JUMPDEST"}, "17": {"op": "POP", "path": "4", "offset": [191, 1262]}, "18": {"op": "PUSH1", "value": "0x4", "path": "4", "offset": [191, 1262], "fn": null}, "20": {"op": "CALLDATASIZE", "path": "4", "offset": [191, 1262], "fn": null}, "21": {"op": "LT", "path": "4", "offset": [191, 1262], "fn": null}, "22": {"op": "PUSH2", "value": "0x41", "path": "4", "offset": [191, 1262], "fn": null}, "25": {"op": "JUMPI", "path": "4", "offset": [191, 1262], "fn": null}, "26": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [191, 1262], "fn": null}, "28": {"op": "CALLDATALOAD", "path": "4", "offset": [191, 1262], "fn": null}, "29": {"op": "PUSH1", "value": "0xE0", "path": "4", "offset": [191, 1262], "fn": null}, "31": {"op": "SHR", "path": "4", "offset": [191, 1262], "fn": null}, "32": {"op": "DUP1", "path": "4", "offset": [191, 1262], "fn": null}, "33": {"op": "PUSH4", "value": "0x1B6B6D23", "path": "4", "offset": [191, 1262], "fn": null}, "38": {"op": "EQ", "path": "4", "offset": [191, 1262], "fn": null}, "39": {"op": "PUSH2", "value": "0x46", "path": "4", "offset": [191, 1262], "fn": null}, "42": {"op": "JUMPI", "path": "4", "offset": [191, 1262], "fn": null}, "43": {"op": "DUP1", "path": "4", "offset": [191, 1262], "fn": null}, "44": {"op": "PUSH4", "value": "0xA4C0ED36", "path": "4", "offset": [191, 1262], "fn": null}, "49": {"op": "EQ", "path": "4", "offset": [191, 1262], "fn": null}, "50": {"op": "PUSH2", "value": "0x6A", "path": "4", "offset": [191, 1262], "fn": null}, "53": {"op": "JUMPI", "path": "4", "offset": [191, 1262], "fn": null}, "54": {"op": "DUP1", "path": "4", "offset": [191, 1262], "fn": null}, "55": {"op": "PUSH4", "value": "0xCF55FE97", "path": "4", "offset": [191, 1262], "fn": null}, "60": {"op": "EQ", "path": "4", "offset": [191, 1262], "fn": null}, "61": {"op": "PUSH2", "value": "0x127", "path": "4", "offset": [191, 1262], "fn": null}, "64": {"op": "JUMPI", "path": "4", "offset": [191, 1262], "fn": null}, "65": {"op": "JUMPDEST", "path": "4", "offset": [191, 1262], "fn": null}, "66": {"op": "PUSH1", "value": "0x0"}, "68": {"op": "DUP1"}, "69": {"op": "REVERT", "first_revert": true}, "70": {"op": "JUMPDEST", "path": "4", "offset": [226, 256]}, "71": {"op": "PUSH2", "value": "0x4E", "path": "4", "offset": [226, 256], "fn": null}, "74": {"op": "PUSH2", "value": "0x159", "path": "4", "offset": [226, 256], "fn": null}, "77": {"op": "JUMP", "jump": "i", "path": "4", "offset": [226, 256], "fn": null}, "78": {"op": "JUMPDEST", "path": "4", "offset": [226, 256], "fn": null}, "79": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [226, 256], "fn": null}, "81": {"op": "DUP1", "path": "4", "offset": [226, 256], "fn": null}, "82": {"op": "MLOAD", "path": "4", "offset": [226, 256], "fn": null}, "83": {"op": "PUSH1", "value": "0x1"}, "85": {"op": "PUSH1", "value": "0x1"}, "87": {"op": "PUSH1", "value": "0xA0"}, "89": {"op": "SHL"}, "90": {"op": "SUB"}, "91": {"op": "SWAP1", "path": "4", "offset": [226, 256]}, "92": {"op": "SWAP3", "path": "4", "offset": [226, 256], "fn": null}, "93": {"op": "AND", "path": "4", "offset": [226, 256], "fn": null}, "94": {"op": "DUP3", "path": "4", "offset": [226, 256], "fn": null}, "95": {"op": "MSTORE", "path": "4", "offset": [226, 256], "fn": null}, "96": {"op": "MLOAD", "path": "4", "offset": [226, 256], "fn": null}, "97": {"op": "SWAP1", "path": "4", "offset": [226, 256], "fn": null}, "98": {"op": "DUP2", "path": "4", "offset": [226, 256], "fn": null}, "99": {"op": "SWAP1", "path": "4", "offset": [226, 256], "fn": null}, "100": {"op": "SUB", "path": "4", "offset": [226, 256], "fn": null}, "101": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [226, 256], "fn": null}, "103": {"op": "ADD", "path": "4", "offset": [226, 256], "fn": null}, "104": {"op": "SWAP1", "path": "4", "offset": [226, 256], "fn": null}, "105": {"op": "RETURN", "path": "4", "offset": [226, 256], "fn": null}, "106": {"op": "JUMPDEST", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "107": {"op": "PUSH2", "value": "0x125", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "110": {"op": "PUSH1", "value": "0x4", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "112": {"op": "DUP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "113": {"op": "CALLDATASIZE", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "114": {"op": "SUB", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "115": {"op": "PUSH1", "value": "0x60"}, "117": {"op": "DUP2"}, "118": {"op": "LT"}, "119": {"op": "ISZERO"}, "120": {"op": "PUSH2", "value": "0x80"}, "123": {"op": "JUMPI"}, "124": {"op": "PUSH1", "value": "0x0"}, "126": {"op": "DUP1"}, "127": {"op": "REVERT"}, "128": {"op": "JUMPDEST"}, "129": {"op": "PUSH1", "value": "0x1"}, "131": {"op": "PUSH1", "value": "0x1"}, "133": {"op": "PUSH1", "value": "0xA0"}, "135": {"op": "SHL"}, "136": {"op": "SUB"}, "137": {"op": "DUP3", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "138": {"op": "CALLDATALOAD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "139": {"op": "AND", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "140": {"op": "SWAP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "141": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "143": {"op": "DUP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "144": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "145": {"op": "CALLDATALOAD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "146": {"op": "SWAP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "147": {"op": "DUP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "148": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "149": {"op": "SWAP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "150": {"op": "PUSH1", "value": "0x60", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "152": {"op": "DUP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "153": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "154": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "156": {"op": "DUP3", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "157": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "158": {"op": "CALLDATALOAD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "159": {"op": "PUSH5", "value": "0x100000000"}, "165": {"op": "DUP2"}, "166": {"op": "GT"}, "167": {"op": "ISZERO"}, "168": {"op": "PUSH2", "value": "0xB0"}, "171": {"op": "JUMPI"}, "172": {"op": "PUSH1", "value": "0x0"}, "174": {"op": "DUP1"}, "175": {"op": "REVERT"}, "176": {"op": "JUMPDEST"}, "177": {"op": "DUP3", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "178": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "179": {"op": "DUP4"}, "180": {"op": "PUSH1", "value": "0x20"}, "182": {"op": "DUP3"}, "183": {"op": "ADD"}, "184": {"op": "GT"}, "185": {"op": "ISZERO"}, "186": {"op": "PUSH2", "value": "0xC2"}, "189": {"op": "JUMPI"}, "190": {"op": "PUSH1", "value": "0x0"}, "192": {"op": "DUP1"}, "193": {"op": "REVERT"}, "194": {"op": "JUMPDEST"}, "195": {"op": "DUP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "196": {"op": "CALLDATALOAD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "197": {"op": "SWAP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "198": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "200": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "201": {"op": "SWAP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "202": {"op": "DUP5"}, "203": {"op": "PUSH1", "value": "0x1"}, "205": {"op": "DUP4"}, "206": {"op": "MUL"}, "207": {"op": "DUP5"}, "208": {"op": "ADD"}, "209": {"op": "GT"}, "210": {"op": "PUSH5", "value": "0x100000000"}, "216": {"op": "DUP4"}, "217": {"op": "GT"}, "218": {"op": "OR"}, "219": {"op": "ISZERO"}, "220": {"op": "PUSH2", "value": "0xE4"}, "223": {"op": "JUMPI"}, "224": {"op": "PUSH1", "value": "0x0"}, "226": {"op": "DUP1"}, "227": {"op": "REVERT"}, "228": {"op": "JUMPDEST"}, "229": {"op": "SWAP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "230": {"op": "SWAP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "231": {"op": "DUP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "232": {"op": "DUP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "233": {"op": "PUSH1", "value": "0x1F", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "235": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "236": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "238": {"op": "DUP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "239": {"op": "SWAP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "240": {"op": "DIV", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "241": {"op": "MUL", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "242": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "244": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "245": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "247": {"op": "MLOAD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "248": {"op": "SWAP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "249": {"op": "DUP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "250": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "251": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "253": {"op": "MSTORE", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "254": {"op": "DUP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "255": {"op": "SWAP4", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "256": {"op": "SWAP3", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "257": {"op": "SWAP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "258": {"op": "SWAP1", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "259": {"op": "DUP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "260": {"op": "DUP2", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "261": {"op": "MSTORE", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "262": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "264": {"op": "ADD", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "265": {"op": "DUP4", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "266": {"op": "DUP4", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "267": {"op": "DUP1"}, "268": {"op": "DUP3"}, "269": {"op": "DUP5"}, "270": {"op": "CALLDATACOPY"}, "271": {"op": "PUSH1", "value": "0x0"}, "273": {"op": "SWAP3"}, "274": {"op": "ADD"}, "275": {"op": "SWAP2"}, "276": {"op": "SWAP1"}, "277": {"op": "SWAP2"}, "278": {"op": "MSTORE"}, "279": {"op": "POP"}, "280": {"op": "SWAP3", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "281": {"op": "SWAP6", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "282": {"op": "POP"}, "283": {"op": "PUSH2", "value": "0x168", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "286": {"op": "SWAP5", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "287": {"op": "POP"}, "288": {"op": "POP"}, "289": {"op": "POP"}, "290": {"op": "POP"}, "291": {"op": "POP"}, "292": {"op": "JUMP", "jump": "i", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "293": {"op": "JUMPDEST", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "294": {"op": "STOP", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "295": {"op": "JUMPDEST", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "296": {"op": "PUSH2", "value": "0x125", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "299": {"op": "PUSH1", "value": "0x4", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "301": {"op": "DUP1", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "302": {"op": "CALLDATASIZE", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "303": {"op": "SUB", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "304": {"op": "PUSH1", "value": "0x60"}, "306": {"op": "DUP2"}, "307": {"op": "LT"}, "308": {"op": "ISZERO"}, "309": {"op": "PUSH2", "value": "0x13D"}, "312": {"op": "JUMPI"}, "313": {"op": "PUSH1", "value": "0x0"}, "315": {"op": "DUP1"}, "316": {"op": "REVERT"}, "317": {"op": "JUMPDEST"}, "318": {"op": "POP"}, "319": {"op": "DUP1", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "320": {"op": "CALLDATALOAD", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "321": {"op": "SWAP1", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "322": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "324": {"op": "DUP2", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "325": {"op": "ADD", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "326": {"op": "CALLDATALOAD", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "327": {"op": "SWAP1", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "328": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "330": {"op": "ADD", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "331": {"op": "CALLDATALOAD", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "332": {"op": "PUSH1", "value": "0x1"}, "334": {"op": "PUSH1", "value": "0x1"}, "336": {"op": "PUSH1", "value": "0xA0"}, "338": {"op": "SHL"}, "339": {"op": "SUB"}, "340": {"op": "AND", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "341": {"op": "PUSH2", "value": "0x222", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "344": {"op": "JUMP", "jump": "i", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "345": {"op": "JUMPDEST", "path": "4", "offset": [226, 256]}, "346": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [226, 256], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "348": {"op": "SLOAD", "path": "4", "offset": [226, 256], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "349": {"op": "PUSH1", "value": "0x1"}, "351": {"op": "PUSH1", "value": "0x1"}, "353": {"op": "PUSH1", "value": "0xA0"}, "355": {"op": "SHL"}, "356": {"op": "SUB"}, "357": {"op": "AND", "path": "4", "offset": [226, 256]}, "358": {"op": "DUP2", "path": "4", "offset": [226, 256], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "359": {"op": "JUMP", "jump": "o", "path": "4", "offset": [226, 256], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "360": {"op": "JUMPDEST", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "361": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [1213, 1217]}, "363": {"op": "SLOAD", "path": "4", "offset": [1213, 1217], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "364": {"op": "PUSH1", "value": "0x1"}, "366": {"op": "PUSH1", "value": "0x1"}, "368": {"op": "PUSH1", "value": "0xA0"}, "370": {"op": "SHL"}, "371": {"op": "SUB"}, "372": {"op": "AND", "path": "4", "offset": [1213, 1217]}, "373": {"op": "CALLER", "path": "4", "offset": [1191, 1201]}, "374": {"op": "EQ", "path": "4", "offset": [1191, 1218]}, "375": {"op": "PUSH2", "value": "0x1BD", "path": "4", "offset": [1183, 1242]}, "378": {"op": "JUMPI", "path": "4", "offset": [1183, 1242]}, "379": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "381": {"op": "DUP1", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "382": {"op": "MLOAD", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "383": {"op": "PUSH3", "value": "0x461BCD"}, "387": {"op": "PUSH1", "value": "0xE5"}, "389": {"op": "SHL"}, "390": {"op": "DUP2", "path": "4", "offset": [1183, 1242]}, "391": {"op": "MSTORE", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "392": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "394": {"op": "PUSH1", "value": "0x4", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "396": {"op": "DUP3", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "397": {"op": "ADD", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "398": {"op": "MSTORE", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "399": {"op": "PUSH1", "value": "0x13", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "401": {"op": "PUSH1", "value": "0x24", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "403": {"op": "DUP3", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "404": {"op": "ADD", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "405": {"op": "MSTORE", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "406": {"op": "PUSH19", "value": "0x26BAB9BA103AB9B2902624A725903A37B5B2B7"}, "426": {"op": "PUSH1", "value": "0x69"}, "428": {"op": "SHL"}, "429": {"op": "PUSH1", "value": "0x44", "path": "4", "offset": [1183, 1242]}, "431": {"op": "DUP3", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "432": {"op": "ADD", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "433": {"op": "MSTORE", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "434": {"op": "SWAP1", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "435": {"op": "MLOAD", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "436": {"op": "SWAP1", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "437": {"op": "DUP2", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "438": {"op": "SWAP1", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "439": {"op": "SUB", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "440": {"op": "PUSH1", "value": "0x64", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "442": {"op": "ADD", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "443": {"op": "SWAP1", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "444": {"op": "REVERT", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "445": {"op": "JUMPDEST", "path": "4", "offset": [1183, 1242], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "446": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [586, 601], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "448": {"op": "DUP1", "path": "4", "offset": [603, 615], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "449": {"op": "DUP3", "path": "4", "offset": [630, 635], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "450": {"op": "DUP1", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "451": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "453": {"op": "ADD", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "454": {"op": "SWAP1", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "455": {"op": "MLOAD", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "456": {"op": "PUSH1", "value": "0x40"}, "458": {"op": "DUP2"}, "459": {"op": "LT"}, "460": {"op": "ISZERO"}, "461": {"op": "PUSH2", "value": "0x1D5"}, "464": {"op": "JUMPI"}, "465": {"op": "PUSH1", "value": "0x0"}, "467": {"op": "DUP1"}, "468": {"op": "REVERT"}, "469": {"op": "JUMPDEST"}, "470": {"op": "POP"}, "471": {"op": "DUP1", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "472": {"op": "MLOAD", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "473": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "475": {"op": "SWAP1", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "476": {"op": "SWAP2", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "477": {"op": "ADD", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "478": {"op": "MLOAD", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "479": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "481": {"op": "MLOAD", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer", "statement": 0}, "482": {"op": "SWAP2", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "483": {"op": "SWAP4", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "484": {"op": "POP"}, "485": {"op": "SWAP2", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "486": {"op": "POP"}, "487": {"op": "DUP2", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "488": {"op": "SWAP1", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "489": {"op": "DUP4", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "490": {"op": "SWAP1", "path": "4", "offset": [619, 656], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "491": {"op": "PUSH1", "value": "0x1"}, "493": {"op": "PUSH1", "value": "0x1"}, "495": {"op": "PUSH1", "value": "0xA0"}, "497": {"op": "SHL"}, "498": {"op": "SUB"}, "499": {"op": "DUP9", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "500": {"op": "AND", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "501": {"op": "SWAP1", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "502": {"op": "PUSH32", "value": "0x7A9A0A6960D95B32CDED93C30E63E7C2EB9E877230813C172110EA54DC1C915C", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "535": {"op": "SWAP1", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "536": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "538": {"op": "SWAP1", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "539": {"op": "LOG4", "path": "4", "offset": [671, 711], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "540": {"op": "POP", "path": "4", "offset": [1252, 1253]}, "541": {"op": "POP", "path": "4", "offset": [1252, 1253], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "542": {"op": "POP", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "543": {"op": "POP", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "544": {"op": "POP", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "545": {"op": "JUMP", "jump": "o", "path": "4", "offset": [465, 718], "fn": "VRFCoordinatorMock.onTokenTransfer"}, "546": {"op": "JUMPDEST", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "547": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "549": {"op": "DUP1", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "550": {"op": "MLOAD", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "551": {"op": "PUSH1", "value": "0x24", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "553": {"op": "DUP2", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "554": {"op": "ADD", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "555": {"op": "DUP6", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "556": {"op": "SWAP1", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "557": {"op": "MSTORE", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "558": {"op": "PUSH1", "value": "0x44", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "560": {"op": "DUP1", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "561": {"op": "DUP3", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "562": {"op": "ADD", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "563": {"op": "DUP6", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "564": {"op": "SWAP1", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "565": {"op": "MSTORE", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "566": {"op": "DUP3", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "567": {"op": "MLOAD", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "568": {"op": "DUP1"}, "569": {"op": "DUP4"}, "570": {"op": "SUB"}, "571": {"op": "SWAP1"}, "572": {"op": "SWAP2"}, "573": {"op": "ADD"}, "574": {"op": "DUP2"}, "575": {"op": "MSTORE"}, "576": {"op": "PUSH1", "value": "0x64", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "578": {"op": "SWAP1", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "579": {"op": "SWAP2", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "580": {"op": "ADD", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "581": {"op": "SWAP1", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "582": {"op": "SWAP2", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "583": {"op": "MSTORE", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "584": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [915, 993], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "586": {"op": "DUP2"}, "587": {"op": "ADD"}, "588": {"op": "DUP1"}, "589": {"op": "MLOAD"}, "590": {"op": "PUSH1", "value": "0x1"}, "592": {"op": "PUSH1", "value": "0x1"}, "594": {"op": "PUSH1", "value": "0xE0"}, "596": {"op": "SHL"}, "597": {"op": "SUB"}, "598": {"op": "AND"}, "599": {"op": "PUSH4", "value": "0x94985DDD"}, "604": {"op": "PUSH1", "value": "0xE0"}, "606": {"op": "SHL"}, "607": {"op": "OR"}, "608": {"op": "SWAP1"}, "609": {"op": "MSTORE"}, "610": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [868, 885], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "612": {"op": "SWAP1", "path": "4", "offset": [868, 885], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "613": {"op": "PUSH3", "value": "0x324B0", "path": "4", "offset": [1015, 1021], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "617": {"op": "DUP1", "path": "4", "offset": [1015, 1021], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "618": {"op": "GAS", "path": "4", "offset": [1039, 1048], "fn": "VRFCoordinatorMock.callBackWithRandomness", "statement": 1}, "619": {"op": "LT", "path": "4", "offset": [1039, 1053], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "620": {"op": "ISZERO", "path": "4", "offset": [1039, 1053], "fn": "VRFCoordinatorMock.callBackWithRandomness", "branch": 2}, "621": {"op": "PUSH2", "value": "0x2BD", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "624": {"op": "JUMPI", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness", "branch": 2}, "625": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "627": {"op": "DUP1", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "628": {"op": "MLOAD", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "629": {"op": "PUSH3", "value": "0x461BCD"}, "633": {"op": "PUSH1", "value": "0xE5"}, "635": {"op": "SHL"}, "636": {"op": "DUP2", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "637": {"op": "MSTORE", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "638": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "640": {"op": "PUSH1", "value": "0x4", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "642": {"op": "DUP3", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "643": {"op": "ADD", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "644": {"op": "MSTORE", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "645": {"op": "PUSH1", "value": "0x1B", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "647": {"op": "PUSH1", "value": "0x24", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "649": {"op": "DUP3", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "650": {"op": "ADD", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "651": {"op": "MSTORE", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "652": {"op": "PUSH32", "value": "0x6E6F7420656E6F7567682067617320666F7220636F6E73756D65720000000000", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "685": {"op": "PUSH1", "value": "0x44", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "687": {"op": "DUP3", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "688": {"op": "ADD", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "689": {"op": "MSTORE", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "690": {"op": "SWAP1", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "691": {"op": "MLOAD", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "692": {"op": "SWAP1", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "693": {"op": "DUP2", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "694": {"op": "SWAP1", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "695": {"op": "SUB", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "696": {"op": "PUSH1", "value": "0x64", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "698": {"op": "ADD", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "699": {"op": "SWAP1", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "700": {"op": "REVERT", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "701": {"op": "JUMPDEST", "path": "4", "offset": [1031, 1085], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "702": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [1096, 1108], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "704": {"op": "DUP5", "path": "4", "offset": [1113, 1129], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "705": {"op": "PUSH1", "value": "0x1"}, "707": {"op": "PUSH1", "value": "0x1"}, "709": {"op": "PUSH1", "value": "0xA0"}, "711": {"op": "SHL"}, "712": {"op": "SUB"}, "713": {"op": "AND", "path": "4", "offset": [1113, 1134], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "714": {"op": "DUP4", "path": "4", "offset": [1135, 1139], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "715": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "717": {"op": "MLOAD", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "718": {"op": "DUP1", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "719": {"op": "DUP3", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "720": {"op": "DUP1", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "721": {"op": "MLOAD", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "722": {"op": "SWAP1", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "723": {"op": "PUSH1", "value": "0x20", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "725": {"op": "ADD", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "726": {"op": "SWAP1", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "727": {"op": "DUP1", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "728": {"op": "DUP4", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "729": {"op": "DUP4", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "730": {"op": "JUMPDEST"}, "731": {"op": "PUSH1", "value": "0x20"}, "733": {"op": "DUP4"}, "734": {"op": "LT"}, "735": {"op": "PUSH2", "value": "0x2F9"}, "738": {"op": "JUMPI"}, "739": {"op": "DUP1"}, "740": {"op": "MLOAD"}, "741": {"op": "DUP3"}, "742": {"op": "MSTORE"}, "743": {"op": "PUSH1", "value": "0x1F"}, "745": {"op": "NOT"}, "746": {"op": "SWAP1"}, "747": {"op": "SWAP3"}, "748": {"op": "ADD"}, "749": {"op": "SWAP2"}, "750": {"op": "PUSH1", "value": "0x20"}, "752": {"op": "SWAP2"}, "753": {"op": "DUP3"}, "754": {"op": "ADD"}, "755": {"op": "SWAP2"}, "756": {"op": "ADD"}, "757": {"op": "PUSH2", "value": "0x2DA"}, "760": {"op": "JUMP"}, "761": {"op": "JUMPDEST"}, "762": {"op": "PUSH1", "value": "0x1"}, "764": {"op": "DUP4"}, "765": {"op": "PUSH1", "value": "0x20"}, "767": {"op": "SUB"}, "768": {"op": "PUSH2", "value": "0x100"}, "771": {"op": "EXP"}, "772": {"op": "SUB"}, "773": {"op": "DUP1"}, "774": {"op": "NOT"}, "775": {"op": "DUP3"}, "776": {"op": "MLOAD"}, "777": {"op": "AND"}, "778": {"op": "DUP2"}, "779": {"op": "DUP5"}, "780": {"op": "MLOAD"}, "781": {"op": "AND"}, "782": {"op": "DUP1"}, "783": {"op": "DUP3"}, "784": {"op": "OR"}, "785": {"op": "DUP6"}, "786": {"op": "MSTORE"}, "787": {"op": "POP"}, "788": {"op": "POP"}, "789": {"op": "POP"}, "790": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "791": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "792": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "793": {"op": "SWAP1", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "794": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "795": {"op": "ADD", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "796": {"op": "SWAP2", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "797": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "798": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "799": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "801": {"op": "PUSH1", "value": "0x40", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "803": {"op": "MLOAD", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "804": {"op": "DUP1", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "805": {"op": "DUP4", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "806": {"op": "SUB", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "807": {"op": "DUP2", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "808": {"op": "PUSH1", "value": "0x0", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "810": {"op": "DUP7", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "811": {"op": "GAS", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "812": {"op": "CALL", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "813": {"op": "SWAP2", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "814": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "815": {"op": "POP", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "816": {"op": "RETURNDATASIZE", "path": "4", "offset": [1113, 1140], "fn": "VRFCoordinatorMock.callBackWithRandomness"}, "817": {"op": "DUP1"}, "818": {"op": "PUSH1", "value": "0x0"}, "820": {"op": "DUP2"}, "821": {"op": "EQ"}, "822": {"op": "PUSH2", "value": "0x35B"}, "825": {"op": "JUMPI"}, "826": {"op": "PUSH1", "value": "0x40"}, "828": {"op": "MLOAD"}, "829": {"op": "SWAP2"}, "830": {"op": "POP"}, "831": {"op": "PUSH1", "value": "0x1F"}, "833": {"op": "NOT"}, "834": {"op": "PUSH1", "value": "0x3F"}, "836": {"op": "RETURNDATASIZE"}, "837": {"op": "ADD"}, "838": {"op": "AND"}, "839": {"op": "DUP3"}, "840": {"op": "ADD"}, "841": {"op": "PUSH1", "value": "0x40"}, "843": {"op": "MSTORE"}, "844": {"op": "RETURNDATASIZE"}, "845": {"op": "DUP3"}, "846": {"op": "MSTORE"}, "847": {"op": "RETURNDATASIZE"}, "848": {"op": "PUSH1", "value": "0x0"}, "850": {"op": "PUSH1", "value": "0x20"}, "852": {"op": "DUP5"}, "853": {"op": "ADD"}, "854": {"op": "RETURNDATACOPY"}, "855": {"op": "PUSH2", "value": "0x360"}, "858": {"op": "JUMP"}, "859": {"op": "JUMPDEST"}, "860": {"op": "PUSH1", "value": "0x60"}, "862": {"op": "SWAP2"}, "863": {"op": "POP"}, "864": {"op": "JUMPDEST"}, "865": {"op": "POP"}, "866": {"op": "POP"}, "867": {"op": "POP"}, "868": {"op": "POP"}, "869": {"op": "POP"}, "870": {"op": "POP"}, "871": {"op": "POP"}, "872": {"op": "POP"}, "873": {"op": "POP"}, "874": {"op": "POP"}, "875": {"op": "JUMP", "jump": "o", "path": "4", "offset": [724, 1147], "fn": "VRFCoordinatorMock.callBackWithRandomness"}}, "type": "contract", "abi": [{"inputs": [{"internalType": "address", "name": "linkAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": true, "internalType": "bytes32", "name": "keyHash", "type": "bytes32"}, {"indexed": true, "internalType": "uint256", "name": "seed", "type": "uint256"}], "name": "RandomnessRequest", "type": "event"}, {"inputs": [], "name": "LINK", "outputs": [{"internalType": "contract LinkTokenInterface", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "requestId", "type": "bytes32"}, {"internalType": "uint256", "name": "randomness", "type": "uint256"}, {"internalType": "address", "name": "consumerContract", "type": "address"}], "name": "callBackWithRandomness", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "bytes", "name": "_data", "type": "bytes"}], "name": "onTokenTransfer", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "ast": {"absolutePath": "contracts/test/VRFCoordinatorMock.sol", "exportedSymbols": {"VRFCoordinatorMock": [116]}, "id": 117, "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.6", ".6"], "nodeType": "PragmaDirective", "src": "32:22:4"}, {"absolutePath": "C:/Users/Simet/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/LinkTokenInterface.sol", "file": "@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol", "id": 2, "nodeType": "ImportDirective", "scope": 117, "sourceUnit": 336, "src": "56:73:4", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/Simet/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFConsumerBase.sol", "file": "@chainlink/contracts/src/v0.6/VRFConsumerBase.sol", "id": 3, "nodeType": "ImportDirective", "scope": 117, "sourceUnit": 241, "src": "130:59:4", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 116, "linearizedBaseContracts": [116], "name": "VRFCoordinatorMock", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "1b6b6d23", "id": 5, "mutability": "mutable", "name": "LINK", "nodeType": "VariableDeclaration", "overrides": null, "scope": 116, "src": "226:30:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_LinkTokenInterface_$335", "typeString": "contract LinkTokenInterface"}, "typeName": {"contractScope": null, "id": 4, "name": "LinkTokenInterface", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 335, "src": "226:18:4", "typeDescriptions": {"typeIdentifier": "t_contract$_LinkTokenInterface_$335", "typeString": "contract LinkTokenInterface"}}, "value": null, "visibility": "public"}, {"anonymous": false, "documentation": null, "id": 13, "name": "RandomnessRequest", "nodeType": "EventDefinition", "parameters": {"id": 12, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7, "indexed": true, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "overrides": null, "scope": 13, "src": "287:22:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 6, "name": "address", "nodeType": "ElementaryTypeName", "src": "287:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 9, "indexed": true, "mutability": "mutable", "name": "keyHash", "nodeType": "VariableDeclaration", "overrides": null, "scope": 13, "src": "311:23:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 8, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "311:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 11, "indexed": true, "mutability": "mutable", "name": "seed", "nodeType": "VariableDeclaration", "overrides": null, "scope": 13, "src": "336:20:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "336:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "286:71:4"}, "src": "263:95:4"}, {"body": {"id": 24, "nodeType": "Block", "src": "404:55:4", "statements": [{"expression": {"argumentTypes": null, "id": 22, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 18, "name": "LINK", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "414:4:4", "typeDescriptions": {"typeIdentifier": "t_contract$_LinkTokenInterface_$335", "typeString": "contract LinkTokenInterface"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 20, "name": "linkAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "440:11:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 19, "name": "LinkTokenInterface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 335, "src": "421:18:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$335_$", "typeString": "type(contract LinkTokenInterface)"}}, "id": 21, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "421:31:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_LinkTokenInterface_$335", "typeString": "contract LinkTokenInterface"}}, "src": "414:38:4", "typeDescriptions": {"typeIdentifier": "t_contract$_LinkTokenInterface_$335", "typeString": "contract LinkTokenInterface"}}, "id": 23, "nodeType": "ExpressionStatement", "src": "414:38:4"}]}, "documentation": null, "id": 25, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 16, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 15, "mutability": "mutable", "name": "linkAddress", "nodeType": "VariableDeclaration", "overrides": null, "scope": 25, "src": "376:19:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 14, "name": "address", "nodeType": "ElementaryTypeName", "src": "376:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "375:21:4"}, "returnParameters": {"id": 17, "nodeType": "ParameterList", "parameters": [], "src": "404:0:4"}, "scope": 116, "src": "364:95:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 56, "nodeType": "Block", "src": "575:143:4", "statements": [{"assignments": [37, 39], "declarations": [{"constant": false, "id": 37, "mutability": "mutable", "name": "keyHash", "nodeType": "VariableDeclaration", "overrides": null, "scope": 56, "src": "586:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 36, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "586:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 39, "mutability": "mutable", "name": "seed", "nodeType": "VariableDeclaration", "overrides": null, "scope": 56, "src": "603:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 38, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "603:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 49, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 42, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "630:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"argumentTypes": null, "components": [{"argumentTypes": null, "id": 44, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "638:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes32_$", "typeString": "type(bytes32)"}, "typeName": {"id": 43, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "638:7:4", "typeDescriptions": {"typeIdentifier": null, "typeString": null}}}, {"argumentTypes": null, "id": 46, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "647:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 45, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "647:7:4", "typeDescriptions": {"typeIdentifier": null, "typeString": null}}}], "id": 47, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "637:18:4", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$", "typeString": "tuple(type(bytes32),type(uint256))"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$", "typeString": "tuple(type(bytes32),type(uint256))"}], "expression": {"argumentTypes": null, "id": 40, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "619:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 41, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "decode", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "619:10:4", "typeDescriptions": {"typeIdentifier": "t_function_abidecode_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 48, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "619:37:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$", "typeString": "tuple(bytes32,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "585:71:4"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 51, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "689:6:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 52, "name": "keyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "697:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"argumentTypes": null, "id": 53, "name": "seed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "706:4:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 50, "name": "RandomnessRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "671:17:4", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$", "typeString": "function (address,bytes32,uint256)"}}, "id": 54, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "671:40:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 55, "nodeType": "EmitStatement", "src": "666:45:4"}]}, "documentation": null, "functionSelector": "a4c0ed36", "id": 57, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 34, "modifierName": {"argumentTypes": null, "id": 33, "name": "onlyLINK", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "562:8:4", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "562:8:4"}], "name": "onTokenTransfer", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 32, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 27, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "overrides": null, "scope": 57, "src": "490:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 26, "name": "address", "nodeType": "ElementaryTypeName", "src": "490:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 29, "mutability": "mutable", "name": "fee", "nodeType": "VariableDeclaration", "overrides": null, "scope": 57, "src": "506:11:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 28, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "506:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 31, "mutability": "mutable", "name": "_data", "nodeType": "VariableDeclaration", "overrides": null, "scope": 57, "src": "519:18:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 30, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "519:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "489:49:4"}, "returnParameters": {"id": 35, "nodeType": "ParameterList", "parameters": [], "src": "575:0:4"}, "scope": 116, "src": "465:253:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 99, "nodeType": "Block", "src": "858:289:4", "statements": [{"assignments": [67], "declarations": [{"constant": false, "id": 67, "mutability": "mutable", "name": "v", "nodeType": "VariableDeclaration", "overrides": null, "scope": 99, "src": "868:17:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_VRFConsumerBase_$240", "typeString": "contract VRFConsumerBase"}, "typeName": {"contractScope": null, "id": 66, "name": "VRFConsumerBase", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 240, "src": "868:15:4", "typeDescriptions": {"typeIdentifier": "t_contract$_VRFConsumerBase_$240", "typeString": "contract VRFConsumerBase"}}, "value": null, "visibility": "internal"}], "id": 68, "initialValue": null, "nodeType": "VariableDeclarationStatement", "src": "868:17:4"}, {"assignments": [70], "declarations": [{"constant": false, "id": 70, "mutability": "mutable", "name": "resp", "nodeType": "VariableDeclaration", "overrides": null, "scope": 99, "src": "895:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 69, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "895:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "id": 79, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 73, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "938:1:4", "typeDescriptions": {"typeIdentifier": "t_contract$_VRFConsumerBase_$240", "typeString": "contract VRFConsumerBase"}}, "id": 74, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "rawFulfillRandomness", "nodeType": "MemberAccess", "referencedDeclaration": 239, "src": "938:22:4", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$", "typeString": "function (bytes32,uint256) external"}}, "id": 75, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "938:31:4", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"argumentTypes": null, "id": 76, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "971:9:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"argumentTypes": null, "id": 77, "name": "randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "982:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 71, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "915:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 72, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "915:22:4", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 78, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "915:78:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "VariableDeclarationStatement", "src": "895:98:4"}, {"assignments": [81], "declarations": [{"constant": false, "id": 81, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 99, "src": "1003:9:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 80, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1003:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 83, "initialValue": {"argumentTypes": null, "hexValue": "323036303030", "id": 82, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1015:6:4", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_206000_by_1", "typeString": "int_const 206000"}, "value": "206000"}, "nodeType": "VariableDeclarationStatement", "src": "1003:18:4"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 85, "name": "gasleft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -7, "src": "1039:7:4", "typeDescriptions": {"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1039:9:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "id": 87, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 81, "src": "1052:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1039:14:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "6e6f7420656e6f7567682067617320666f7220636f6e73756d6572", "id": 89, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1055:29:4", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_c816b0be31b4ff6568775c57154270cb6742b4541711a582b675ea909198f4b7", "typeString": "literal_string \"not enough gas for consumer\""}, "value": "not enough gas for consumer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c816b0be31b4ff6568775c57154270cb6742b4541711a582b675ea909198f4b7", "typeString": "literal_string \"not enough gas for consumer\""}], "id": 84, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1031:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 90, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1031:54:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 91, "nodeType": "ExpressionStatement", "src": "1031:54:4"}, {"assignments": [93, null], "declarations": [{"constant": false, "id": 93, "mutability": "mutable", "name": "success", "nodeType": "VariableDeclaration", "overrides": null, "scope": 99, "src": "1096:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 92, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1096:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}, null], "id": 98, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 96, "name": "resp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 70, "src": "1135:4:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": null, "id": 94, "name": "consumerContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "1113:16:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 95, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "1113:21:4", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 97, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1113:27:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "1095:45:4"}]}, "documentation": null, "functionSelector": "cf55fe97", "id": 100, "implemented": true, "kind": "function", "modifiers": [], "name": "callBackWithRandomness", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 64, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 59, "mutability": "mutable", "name": "requestId", "nodeType": "VariableDeclaration", "overrides": null, "scope": 100, "src": "765:17:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 58, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "765:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 61, "mutability": "mutable", "name": "randomness", "nodeType": "VariableDeclaration", "overrides": null, "scope": 100, "src": "792:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 60, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "792:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 63, "mutability": "mutable", "name": "consumerContract", "nodeType": "VariableDeclaration", "overrides": null, "scope": 100, "src": "820:24:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 62, "name": "address", "nodeType": "ElementaryTypeName", "src": "820:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "755:95:4"}, "returnParameters": {"id": 65, "nodeType": "ParameterList", "parameters": [], "src": "858:0:4"}, "scope": 116, "src": "724:423:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 114, "nodeType": "Block", "src": "1173:87:4", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 103, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1191:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "1191:10:4", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 107, "name": "LINK", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "1213:4:4", "typeDescriptions": {"typeIdentifier": "t_contract$_LinkTokenInterface_$335", "typeString": "contract LinkTokenInterface"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_LinkTokenInterface_$335", "typeString": "contract LinkTokenInterface"}], "id": 106, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1205:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 105, "name": "address", "nodeType": "ElementaryTypeName", "src": "1205:7:4", "typeDescriptions": {"typeIdentifier": null, "typeString": null}}}, "id": 108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1205:13:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1191:27:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4d75737420757365204c494e4b20746f6b656e", "id": 110, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1220:21:4", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_e987a5305d985c4322166f34f5dcca15d7dfa4faebb15d40e05678e672e6a6a7", "typeString": "literal_string \"Must use LINK token\""}, "value": "Must use LINK token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e987a5305d985c4322166f34f5dcca15d7dfa4faebb15d40e05678e672e6a6a7", "typeString": "literal_string \"Must use LINK token\""}], "id": 102, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1183:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 111, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1183:59:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 112, "nodeType": "ExpressionStatement", "src": "1183:59:4"}, {"id": 113, "nodeType": "PlaceholderStatement", "src": "1252:1:4"}]}, "documentation": null, "id": 115, "name": "onlyLINK", "nodeType": "ModifierDefinition", "overrides": null, "parameters": {"id": 101, "nodeType": "ParameterList", "parameters": [], "src": "1170:2:4"}, "src": "1153:107:4", "virtual": false, "visibility": "internal"}], "scope": 117, "src": "191:1071:4"}], "src": "32:1230:4"}, "compiler": {"version": "0.6.6+commit.6c089d02", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "VRFCoordinatorMock", "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631b6b6d2314610046578063a4c0ed361461006a578063cf55fe9714610127575b600080fd5b61004e610159565b604080516001600160a01b039092168252519081900360200190f35b6101256004803603606081101561008057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156100b057600080fd5b8201836020820111156100c257600080fd5b803590602001918460018302840111640100000000831117156100e457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610168945050505050565b005b6101256004803603606081101561013d57600080fd5b50803590602081013590604001356001600160a01b0316610222565b6000546001600160a01b031681565b6000546001600160a01b031633146101bd576040805162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015290519081900360640190fd5b6000808280602001905160408110156101d557600080fd5b5080516020909101516040519193509150819083906001600160a01b038816907f7a9a0a6960d95b32cded93c30e63e7c2eb9e877230813c172110ea54dc1c915c90600090a45050505050565b604080516024810185905260448082018590528251808303909101815260649091019091526020810180516001600160e01b03166394985ddd60e01b179052600090620324b0805a10156102bd576040805162461bcd60e51b815260206004820152601b60248201527f6e6f7420656e6f7567682067617320666f7220636f6e73756d65720000000000604482015290519081900360640190fd5b6000846001600160a01b0316836040518082805190602001908083835b602083106102f95780518252601f1990920191602091820191016102da565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461035b576040519150601f19603f3d011682016040523d82523d6000602084013e610360565b606091505b5050505050505050505056fea2646970667358221220de2e42ae1d74f54fe33751953b899c6c931ab279ffa3206e27e4f9cfa83a866b64736f6c63430006060033", "deployedSourceMap": "191:1071:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;191:1071:4;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;226:30:4;;;:::i;:::-;;;;-1:-1:-1;;;;;226:30:4;;;;;;;;;;;;;;465:253;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;465:253:4;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;465:253:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;465:253:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;465:253:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;465:253:4;;-1:-1:-1;465:253:4;;-1:-1:-1;;;;;465:253:4:i;:::-;;724:423;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;724:423:4;;;;;;;;;;;-1:-1:-1;;;;;724:423:4;;:::i;226:30::-;;;-1:-1:-1;;;;;226:30:4;;:::o;465:253::-;1213:4;;-1:-1:-1;;;;;1213:4:4;1191:10;:27;1183:59;;;;;-1:-1:-1;;;1183:59:4;;;;;;;;;;;;-1:-1:-1;;;1183:59:4;;;;;;;;;;;;;;;586:15:::1;603:12:::0;630:5:::1;619:37;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;619:37:4;;::::1;::::0;;::::1;::::0;;671:40;619:37;;-1:-1:-1;619:37:4;-1:-1:-1;619:37:4;;;;-1:-1:-1;;;;;671:40:4;::::1;::::0;::::1;::::0;;;::::1;1252:1;;465:253:::0;;;:::o;724:423::-;915:78;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;915:78:4;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;868:17:4;;1015:6;;1039:9;:14;;1031:54;;;;;-1:-1:-1;;;1031:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:12;1113:16;-1:-1:-1;;;;;1113:21:4;1135:4;1113:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1113:27:4;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;;;;;;;;;;724:423:4:o", "language": "Solidity", "natspec": {"methods": {}}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xCF55FE97 EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x168 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x26BAB9BA103AB9B2902624A725903A37B5B2B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0x7A9A0A6960D95B32CDED93C30E63E7C2EB9E877230813C172110EA54DC1C915C SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x94985DDD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x324B0 DUP1 GAS LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682067617320666F7220636F6E73756D65720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2F9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x360 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0x2E TIMESTAMP 0xAE SAR PUSH21 0xF54FE33751953B899C6C931AB279FFA3206E27E4F9 0xCF 0xA8 GASPRICE DUP7 PUSH12 0x64736F6C6343000606003300 ", "sha1": "c15538885d2dc85cc01dec71417dde25f3532478", "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.6;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\";\nimport \"@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\";\n\ncontract VRFCoordinatorMock {\n\n    LinkTokenInterface public LINK;\n\n    event RandomnessRequest(address indexed sender, bytes32 indexed keyHash, uint256 indexed seed);\n\n    constructor(address linkAddress) public {\n        LINK = LinkTokenInterface(linkAddress);\n    }\n\n    function onTokenTransfer(address sender, uint256 fee, bytes memory _data)\n        public\n        onlyLINK\n    {\n        (bytes32 keyHash, uint256 seed) = abi.decode(_data, (bytes32, uint256));\n        emit RandomnessRequest(sender, keyHash, seed);\n    }\n\n    function callBackWithRandomness(\n        bytes32 requestId,\n        uint256 randomness,\n        address consumerContract\n    ) public {\n        VRFConsumerBase v;\n        bytes memory resp = abi.encodeWithSelector(v.rawFulfillRandomness.selector, requestId, randomness);\n        uint256 b = 206000;\n        require(gasleft() >= b, \"not enough gas for consumer\");\n        (bool success,) = consumerContract.call(resp);\n    }\n\n    modifier onlyLINK() {\n        require(msg.sender == address(LINK), \"Must use LINK token\");\n        _;\n    }\n}", "sourceMap": "191:1071:4:-:0;;;364:95;5:9:-1;2:2;;;27:1;24;17:12;2:2;364:95:4;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;364:95:4;414:4;:38;;-1:-1:-1;;;;;414:38:4;;;-1:-1:-1;;;;;;414:38:4;;;;;;;;;191:1071;;;;;;", "sourcePath": "contracts/test/VRFCoordinatorMock.sol", "deployment": {"address": "0x559D1Fbf6aBd549CC6A2fCe5a70eE4BDfa5d0Fb1", "chainid": "5777", "blockHeight": 3}}